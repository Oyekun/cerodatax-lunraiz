/*
 * File: app/view/persona/Persona.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cerodatax.view.persona.Persona', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.personapersona',

    requires: [
        'cerodatax.view.persona.PersonaViewModel',
        'cerodatax.view.persona.PersonaViewController',
        'Ext.grid.Panel',
        'Ext.grid.column.Number',
        'Ext.grid.column.Check',
        'Ext.grid.column.Date',
        'Ext.button.Button',
        'Ext.grid.filters.Filters',
        'Ext.selection.RowModel',
        'Ext.toolbar.Paging'
    ],

    controller: 'personapersona',
    viewModel: {
        type: 'personapersona'
    },
    controller: 'nomencladorcrud',
    height: 528,
    shrinkWrap: 0,
    width: 860,
    layout: 'border',
    collapsed: false,
    defaultListenerScope: true,

    dockedItems: [
        {
            xtype: 'pagingtoolbar',
            dock: 'bottom',
            displayInfo: true,
            store: 'persona.Persona'
        }
    ],

    initConfig: function(instanceConfig) {
        var me = this,
            config = {
                items: [
                    me.processList({
                        xtype: 'gridpanel',
                        region: 'center',
                        split: true,
                        reference: 'list',
                        itemId: 'gridPanel',
                        resizable: false,
                        forceFit: false,
                        store: 'persona.Persona',
                        columns: [
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'foto',
                                lockable: true,
                                locked: true,
                                text: 'Foto'
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'nombre',
                                text: 'Nombre'
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'apellidos',
                                text: 'Apellidos'
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'entidad',
                                text: 'Entidad'
                            },
                            {
                                xtype: 'numbercolumn',
                                dataIndex: 'carnet_identidad',
                                text: 'Carnet Identidad',
                                format: '00'
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'sexo',
                                text: 'Sexo'
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'estado_civil',
                                text: 'Estado Civil'
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'color_piel',
                                text: 'Color Piel'
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'registro_civil',
                                text: 'Registro Civil'
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'padre',
                                text: 'Padre'
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'madre',
                                text: 'Madre'
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'tomo',
                                text: 'Tomo'
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'folio',
                                text: 'Folio'
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'ano',
                                text: 'Año'
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'direccion',
                                text: 'Dirección'
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'correo',
                                text: 'Correo'
                            },
                            {
                                xtype: 'numbercolumn',
                                dataIndex: 'edad',
                                text: 'Telefono',
                                format: '00'
                            },
                            {
                                xtype: 'numbercolumn',
                                dataIndex: 'estatura',
                                text: 'Estatura'
                            },
                            {
                                xtype: 'numbercolumn',
                                dataIndex: 'peso',
                                text: 'Peso'
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'municipio',
                                text: 'Municipio'
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'provincia',
                                text: 'Provincia'
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'nivel_educacional',
                                text: 'Nivel Educacional'
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'situacion_defensa',
                                text: 'Situacion Defensa'
                            },
                            {
                                xtype: 'checkcolumn',
                                dataIndex: 'donante',
                                lockable: false,
                                text: 'Donante',
                                listeners: {
                                    beforecheckchange: 'onCheckcolumnBeforeCheckChange'
                                }
                            },
                            {
                                xtype: 'checkcolumn',
                                dataIndex: 'trabaja',
                                text: 'Trabaja',
                                listeners: {
                                    beforecheckchange: 'onCheckcolumnBeforeCheckChange1'
                                }
                            },
                            {
                                xtype: 'datecolumn',
                                dataIndex: 'fecha_nacimiento',
                                text: 'Fecha Nacimiento',
                                format: 'Y-m-d'
                            },
                            {
                                xtype: 'numbercolumn',
                                dataIndex: 'cantidad_hijos',
                                text: 'Cantidad Hijos',
                                format: '00'
                            },
                            {
                                xtype: 'gridcolumn',
                                dataIndex: 'grupo_sanguineo',
                                text: 'Grupo Sanguineo'
                            }
                        ],
                        dockedItems: [
                            {
                                xtype: 'toolbar',
                                dock: 'top',
                                componentCls: 'button-view',
                                items: [
                                    {
                                        xtype: 'button',
                                        itemId: 'btnAdd',
                                        glyph: 'xf067@FontAwesome',
                                        iconCls: 'null',
                                        text: 'Adicionar',
                                        listeners: {
                                            click: {
                                                fn: 'addWindows',
                                                scope: 'controller'
                                            }
                                        }
                                    },
                                    {
                                        xtype: 'button',
                                        disabled: true,
                                        itemId: 'btnEdit',
                                        text: 'Editar',
                                        bind: {
                                            hidden: '{!record}'
                                        },
                                        listeners: {
                                            click: {
                                                fn: 'editWindows',
                                                scope: 'controller'
                                            }
                                        }
                                    },
                                    {
                                        xtype: 'button',
                                        disabled: true,
                                        itemId: 'btnRemove',
                                        text: 'Eliminar',
                                        bind: {
                                            hidden: '{!record}'
                                        },
                                        listeners: {
                                            click: {
                                                fn: 'remove',
                                                scope: 'controller'
                                            }
                                        }
                                    },
                                    {
                                        xtype: 'button',
                                        itemId: 'btnRefresh',
                                        text: 'Actualizar',
                                        tooltip: '<span style="  font-weight:bold"> Actualizar(Ctrl+A) </span>Actualiza elemento(s).',
                                        tooltipType: 'title',
                                        bind: {
                                            hidden: '{!record}'
                                        },
                                        listeners: {
                                            click: {
                                                fn: 'refresh',
                                                scope: 'controller'
                                            }
                                        }
                                    }
                                ],
                                listeners: {
                                    afterrender: {
                                        fn: 'onToolbarAfterRender',
                                        scope: 'controller'
                                    }
                                }
                            }
                        ],
                        plugins: [
                            {
                                ptype: 'gridfilters',
                                menuFilterText: 'Buscar'
                            }
                        ],
                        selModel: {
                            selType: 'rowmodel',
                            mode: 'MULTI'
                        }
                    })
                ]
            };
        if (instanceConfig) {
            me.getConfigurator().merge(me, config, instanceConfig);
        }
        return me.callParent([config]);
    },

    processList: function(config) {
        var control = Ext.create('cerodatax.view.nomenclador.CrudViewController');
        control.win='';
        var me = this;
        var aux = me.config.viewModel.type;
        control.getWinPanel(aux);
        var win = control.win;
        var vista = Ext.create('widget.'+win);
        form = vista.down('form').getForm();
        var results=[];
        columns = control.searchLabel(form.owner.items.items,results,true);
        config.columns = columns;
        return config;
    },

    onCheckcolumnBeforeCheckChange: function(checkcolumn, rowIndex, checked, eOpts) {
        return false;
    },

    onCheckcolumnBeforeCheckChange1: function(checkcolumn, rowIndex, checked, eOpts) {
        return false;
    }

});