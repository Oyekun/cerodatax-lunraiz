/*
 * File: app/view/estructura/AreaViewController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cerodatax.view.estructura.AreaViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.estructuraarea',

    showView: function(view) {
        var layout = this.getReferences().display.getLayout();
        layout.setActiveItem(this.lookupReference(view));
    },

    onTreePanelSelect: function(rowmodel, record, index, eOpts) {

    },

    onTreePanelAfterItemExpand: function(node, index, item, eOpts) {

    },

    onTreePanelBeforeItemExpand: function(nodeinterface, eOpts) {

    },

    onTreePanelSelectionChange: function(model, selected, eOpts) {

    },

    add: function(button, e, eOpts) {
        var formPanel = this.getReferences().form,
            form = formPanel.getForm(),
            newRecord = Ext.create('model.areas');

        // Clear form
        form.reset();

        // Set record
        form.loadRecord(newRecord);

        // Set title
        formPanel.setTitle('Adicionar Areas');

        // Show form
        this.showView('form');
    },

    edit: function(button, e, eOpts) {
        var formPanel = this.getReferences().form,
            form = formPanel.getForm(),
            record = this.getViewModel().get('record');

        // Load record model into form
        form.loadRecord(record);

        // Set title
        formPanel.setTitle('Editar Areas');

        // Show form
        this.showView('form');
    },

    remove: function(button, e, eOpts) {
        var me = this;

        // Ask user to confirm this action
        Ext.Msg.confirm('Confirm Delete', 'Esta seguro que desea eliminar el Area?', function(result) {

            // User confirmed yes
            if (result == 'yes') {

                var record = me.getViewModel().get('record'),
                    store = Ext.StoreManager.lookup('Areas');

                // Delete record from store
                store.remove(record);

                // Hide display
                me.showView('selectMessage');

            }

        });
    },

    associate: function(button, e, eOpts) {
 
    },

    refresh: function(button, e, eOpts) {
 
    },

    onToolbarAfterRender: function(component, eOpts) {

    },

    saveTreeWindows: function(button, e, eOpts) {
 
    },

    cancelEdit: function(button, e, eOpts) {
        // Show details
        this.showView('details');
    }

});
