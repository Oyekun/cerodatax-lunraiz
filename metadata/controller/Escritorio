{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": null,
        "designer|userClassName": "Escritorio"
    },
    "name": "MyController",
    "designerId": "1e05e5b2-2451-4b87-90f8-0a4f149d2569",
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "item"
                ],
                "fn": "selectMenu",
                "implHandler": [
                    "//funcion para recargar los grid y tree panel al dar click en en los menu principales",
                    "",
                    "",
                    "var obj = item.itemId.split('menu');",
                    "var search = obj[1];",
                    "",
                    "var panelPrincipal = Ext.ComponentQuery.query('#panelPrincipal')[0];",
                    "panelPrincipal.items.each(function(itemPanel){",
                    "    searchPanel = 'panel'+search;",
                    "",
                    "    if(itemPanel.itemId==searchPanel)",
                    "    { itemPanel.setHidden(false);",
                    "     var tree = itemPanel.down('treepanel');",
                    "     var grid = itemPanel.down('grid');",
                    "",
                    "     var display = itemPanel.down('panel[reference=display]');",
                    "",
                    "     if(display)",
                    "     {",
                    "",
                    "         var layout = display.getLayout();",
                    "",
                    "         var select = itemPanel.down('panel[reference=selectMessage]');",
                    "",
                    "         layout.setActiveItem(select);",
                    "",
                    "     }",
                    "",
                    "     if(grid)",
                    "     {if(grid.store.proxy.extraParams!==undefined)",
                    "       grid.store.proxy.extraParams.combo = '';",
                    "      grid.store.load();",
                    "      grid.getSelectionModel().deselectAll();",
                    "",
                    "     }",
                    "     if(tree)",
                    "     {tree.store.proxy.extraParams.parent_id = '';",
                    "      tree.store.load();",
                    "      tree.getSelectionModel().deselectAll();",
                    "",
                    "     }",
                    "     if(itemPanel.down('toolbar').down('button[itemId=btnEdit]'))",
                    "         itemPanel.down('toolbar').down('button[itemId=btnEdit]').setDisabled(true);",
                    "     if(itemPanel.down('toolbar').down('button[itemId=btnRemove]'))",
                    "         itemPanel.down('toolbar').down('button[itemId=btnRemove]').setDisabled(true);",
                    "     if(itemPanel.down('toolbar').down('button[itemId=btnAssociate]'))",
                    "         itemPanel.down('toolbar').down('button[itemId=btnAssociate]').setDisabled(true);",
                    "",
                    "    }",
                    "    else itemPanel.setHidden(true);",
                    "});"
                ]
            },
            "name": "selectMenu",
            "designerId": "a546a2fe-2340-4315-b4b2-9233ffd4561a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel",
                "designer|targetType": "persona.Cargo",
                "fn": "onPanelActivate",
                "implHandler": [
                    "//Funcion para recargar los grid y tree de los tabpanel",
                    "//console.log(component)",
                    "if(component.tab)",
                    "{       var grid = component.down('grid');",
                    " var tree = component.down('treePanel');",
                    " var successCallback = function(o, resp) {",
                    "     //debugger;",
                    "",
                    "     var json = Ext.JSON.decode(resp._response.responseText);",
                    "",
                    "",
                    "",
                    "     if(json!==undefined) // cambiar cuando se creen usuario bien",
                    "     {",
                    "         if(json.success===true&&json.message===\"No existen elementos\")",
                    "         {",
                    "             //var component =  Ext.create('cerodatax.view.escritorio.FormAutenticacion').show();",
                    "",
                    "",
                    "             //Ext.ComponentQuery.query('#identity')[0].focus('', 10);",
                    "",
                    "             //this.getController('Seguridad');",
                    "              alert('La sesión ha expirado.');",
                    "                    window.location = 'index.php?auth/login';",
                    "                    window.location = '';",
                    "",
                    "         }",
                    "",
                    "     }",
                    " };",
                    "",
                    " if(grid)",
                    " {if(grid.store.proxy.extraParams!==undefined)",
                    "     grid.store.proxy.extraParams.combo = '';",
                    "  grid.store.load();",
                    "  grid.getSelectionModel().deselectAll();",
                    "  if(grid.down('toolbar').down('button[itemId=btnEdit]'))",
                    "      grid.down('toolbar').down('button[itemId=btnEdit]').setDisabled(true);",
                    "  if(grid.down('toolbar').down('button[itemId=btnRemove]'))",
                    "      grid.down('toolbar').down('button[itemId=btnRemove]').setDisabled(true);",
                    "  if(grid.down('toolbar').down('button[itemId=btnAssociate]'))",
                    "      grid.down('toolbar').down('button[itemId=btnAssociate]').setDisabled(true);",
                    "",
                    " }console.log(tree)",
                    "",
                    " if(tree)",
                    " {tree.store.proxy.extraParams.parent_id = '';",
                    "  tree.store.load();//{   scope: this, callback:successCallback}",
                    "  tree.getSelectionModel().deselectAll();",
                    "  if(tree.down('toolbar'))",
                    "  {if(tree.down('toolbar').down('button[itemId=btnEdit]'))",
                    "      tree.down('toolbar').down('button[itemId=btnEdit]').setDisabled(true);",
                    "  if(tree.down('toolbar').down('button[itemId=btnRemove]'))",
                    "      tree.down('toolbar').down('button[itemId=btnRemove]').setDisabled(true);",
                    "  if(tree.down('toolbar').down('button[itemId=btnAssociate]'))",
                    "      tree.down('toolbar').down('button[itemId=btnAssociate]').setDisabled(true);",
                    "  }",
                    " }",
                    "}",
                    "",
                    "",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onPanelActivate",
            "designerId": "625dbf7f-8bda-4789-8af8-a3be25ea5b21"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "item"
                ],
                "fn": "showMenu",
                "implHandler": [
                    "console.log(item);"
                ]
            },
            "name": "showMenu",
            "designerId": "b2b8b358-19f2-45e9-82b2-fce309a857b0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#buttonChangePassword",
                "designer|params": [
                    "button"
                ],
                "designer|targetType": "escritorio.FormChangePassword",
                "fn": "onWindowsChangePasswordClick",
                "implHandler": [
                    "//alert('change')",
                    "form = button.up('form');",
                    "formWindow = form.up('window');",
                    "var me = this;",
                    "form.mask('Comprobando usuario y contraseña...');",
                    "if(form.isValid())",
                    "{",
                    "    values = form.getValues();",
                    "    //var view = this.getView()",
                    "    // console.log(view)",
                    "    // Success",
                    "",
                    "    var successCallback = function(resp, ops) {",
                    "        //debugger;",
                    "",
                    "         var json = Ext.JSON.decode(resp.responseText);",
                    "",
                    "",
                    "",
                    "        if(json.success===true) // cambiar cuando se creen usuario bien",
                    "        {",
                    "         form.unmask();",
                    "            title = 'Información';",
                    "            icon = 'xf05a@FontAwesome';",
                    "             Ext.toast({",
                    "                    html: 'Contraseña cambianda satisfactoriamente.' ,",
                    "                    glyph:icon,",
                    "                    closable: false,",
                    "                    align: 't',",
                    "                    title:title,",
                    "                    slideInDuration: 400,",
                    "                    minWidth: 400",
                    "                });",
                    " window.location = 'index.php?auth/login';",
                    "                  window.location = '';",
                    "        formWindow.destroy();",
                    "        }",
                    "        else{",
                    "            form.unmask();",
                    "            var s=json.message;",
                    "            var title='Error';",
                    "            var icon = 'xf057@FontAwesome';",
                    "",
                    "             Ext.toast({",
                    "                    html: s ,",
                    "                    glyph:icon,",
                    "                    closable: false,",
                    "                    align: 't',",
                    "                    title:title,",
                    "                    slideInDuration: 400,",
                    "                    minWidth: 400",
                    "                });",
                    "            Ext.ComponentQuery.query('#old_password')[0].reset();",
                    "            Ext.ComponentQuery.query('#new_password')[0].reset();",
                    "            Ext.ComponentQuery.query('#confirmacion_password')[0].reset();",
                    "        }",
                    "",
                    "    };",
                    "",
                    "",
                    "",
                    "",
                    "    // Failure",
                    "    var failureCallback = function(resp, ops) {",
                    "",
                    "        // Show login failure error",
                    "        form.unmask();",
                    "       // Ext.Msg.alert('Login Failure', resp);",
                    "",
                    "    };",
                    "",
                    "",
                    "",
                    "    //Esto es momentaneamente para la creaion de los usuarios roles y menu",
                    "    // TODO: Login using server-side authentication service",
                    "    Ext.Ajax.request({",
                    "        url: 'index.php/auth/change_password',",
                    "        method: 'POST',",
                    "        params: values,",
                    "        success: successCallback,",
                    "        failure: failureCallback",
                    "    });",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onWindowsChangePasswordClick",
            "designerId": "2d252091-0f67-4b7a-a8bd-e904f67eb426"
        }
    ]
}